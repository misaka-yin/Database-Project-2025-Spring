PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "CGY_AUT_SEM" (
    "CGY_AUTHOR_AUTHOR_ID" INTEGER NOT NULL, -- Was INT UNSIGNED
    "SEMINAR_EVENT_ID" INTEGER NOT NULL,     -- Was INT UNSIGNED
    "INVT_ID" INTEGER NOT NULL,              -- Was INT UNSIGNED
    PRIMARY KEY ("SEMINAR_EVENT_ID", "CGY_AUTHOR_AUTHOR_ID"),
    FOREIGN KEY ("CGY_AUTHOR_AUTHOR_ID") REFERENCES "CGY_AUTHOR"("AUTHOR_ID"),
    FOREIGN KEY ("SEMINAR_EVENT_ID") REFERENCES "SEMINAR"("EVENT_ID")
);
INSERT INTO CGY_AUT_SEM VALUES(1,1,1);
INSERT INTO CGY_AUT_SEM VALUES(2,1,2);
INSERT INTO CGY_AUT_SEM VALUES(3,2,3);
INSERT INTO CGY_AUT_SEM VALUES(4,2,4);
INSERT INTO CGY_AUT_SEM VALUES(5,3,5);
INSERT INTO CGY_AUT_SEM VALUES(6,3,6);
INSERT INTO CGY_AUT_SEM VALUES(7,4,7);
INSERT INTO CGY_AUT_SEM VALUES(8,4,8);
INSERT INTO CGY_AUT_SEM VALUES(9,5,9);
INSERT INTO CGY_AUT_SEM VALUES(10,5,10);
INSERT INTO CGY_AUT_SEM VALUES(11,6,11);
INSERT INTO CGY_AUT_SEM VALUES(12,6,12);
INSERT INTO CGY_AUT_SEM VALUES(13,1,13);
INSERT INTO CGY_AUT_SEM VALUES(14,2,14);
INSERT INTO CGY_AUT_SEM VALUES(15,3,15);
INSERT INTO CGY_AUT_SEM VALUES(6,26,12);
INSERT INTO CGY_AUT_SEM VALUES(1,27,13);
INSERT INTO CGY_AUT_SEM VALUES(2,28,14);
INSERT INTO CGY_AUT_SEM VALUES(3,29,15);
CREATE TABLE IF NOT EXISTS "CGY_AUTHOR" (
    "AUTHOR_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "A_FNAME" TEXT NOT NULL,         -- Was VARCHAR(15)
    "A_LNAME" TEXT NOT NULL,         -- Was VARCHAR(15)
    "ADDR_STR" TEXT NOT NULL,        -- Was VARCHAR(25)
    "ADDR_CITY" TEXT NOT NULL,       -- Was VARCHAR(15)
    "ADDR_ST" TEXT NOT NULL,         -- Was VARCHAR(2)
    "EMAIL_ADDR" TEXT NOT NULL       -- Was VARCHAR(30)
);
INSERT INTO CGY_AUTHOR VALUES(1,'John','Smith','123 Main St','Boston','MA','john.smith@email.com');
INSERT INTO CGY_AUTHOR VALUES(2,'Emily','Johnson','456 Oak Ave','New York','NY','emily.j@email.com');
INSERT INTO CGY_AUTHOR VALUES(3,'Michael','Williams','789 Pine Rd','Chicago','IL','michael.w@email.com');
INSERT INTO CGY_AUTHOR VALUES(4,'Sarah','Brown','321 Elm St','San Francisco','CA','sarah.b@email.com');
INSERT INTO CGY_AUTHOR VALUES(5,'David','Jones','654 Maple Dr','Seattle','WA','david.j@email.com');
INSERT INTO CGY_AUTHOR VALUES(6,'Jennifer','Garcia','987 Cedar Ln','Austin','TX','jennifer.g@email.com');
INSERT INTO CGY_AUTHOR VALUES(7,'Robert','Miller','135 Birch Blvd','Denver','CO','robert.m@email.com');
INSERT INTO CGY_AUTHOR VALUES(8,'Lisa','Davis','246 Walnut Ct','Atlanta','GA','lisa.d@email.com');
INSERT INTO CGY_AUTHOR VALUES(9,'Thomas','Rodriguez','369 Spruce Way','Miami','FL','thomas.r@email.com');
INSERT INTO CGY_AUTHOR VALUES(10,'Patricia','Martinez','482 Cherry St','Phoenix','AZ','patricia.m@email.com');
INSERT INTO CGY_AUTHOR VALUES(11,'James','Hernandez','159 Willow Ave','Philadelphia','PA','james.h@email.com');
INSERT INTO CGY_AUTHOR VALUES(12,'Mary','Lopez','753 Redwood Dr','Houston','TX','mary.l@email.com');
INSERT INTO CGY_AUTHOR VALUES(13,'Charles','Gonzalez','864 Sycamore Rd','San Diego','CA','charles.g@email.com');
INSERT INTO CGY_AUTHOR VALUES(14,'Susan','Wilson','951 Magnolia Ln','Dallas','TX','susan.w@email.com');
INSERT INTO CGY_AUTHOR VALUES(15,'Daniel','Anderson','357 Palm Blvd','Portland','OR','daniel.a@email.com');
CREATE TABLE IF NOT EXISTS "CGY_BK_AUT" (
    "ISBN" TEXT NOT NULL,             -- Was VARCHAR(13)
    "AUTHOR_ID" INTEGER NOT NULL,     -- Was INT UNSIGNED
    "CONTRI_ROLE" TEXT NOT NULL,      -- Was VARCHAR(1)
    PRIMARY KEY ("ISBN", "AUTHOR_ID"),
    FOREIGN KEY ("AUTHOR_ID") REFERENCES "CGY_AUTHOR"("AUTHOR_ID"),
    FOREIGN KEY ("ISBN") REFERENCES "CGY_BOOK"("ISBN"),
    CONSTRAINT "CHK_CONTRI_ROLE" CHECK ("CONTRI_ROLE" IN ('P', 'C', 'S'))
);
INSERT INTO CGY_BK_AUT VALUES('ISBN123456789',1,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN234567890',2,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN345678901',3,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN456789012',4,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN567890123',5,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN678901234',6,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN789012345',7,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN890123456',8,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN901234567',9,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN012345678',10,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN112233445',11,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN223344556',12,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN334455667',13,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN445566778',14,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN556677889',15,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN667788990',1,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN778899001',1,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN889900112',2,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN990011223',3,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN001122334',4,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN152233446',5,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN223344557',6,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN334455668',7,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN445566779',8,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN556677890',9,'S');
INSERT INTO CGY_BK_AUT VALUES('ISBN123456789',10,'C');
INSERT INTO CGY_BK_AUT VALUES('ISBN234567890',11,'C');
INSERT INTO CGY_BK_AUT VALUES('ISBN345678901',12,'C');
INSERT INTO CGY_BK_AUT VALUES('ISBN456789012',13,'C');
INSERT INTO CGY_BK_AUT VALUES('ISBN567890123',14,'C');
CREATE TABLE IF NOT EXISTS "CGY_BOOK" (
    "ISBN" TEXT NOT NULL PRIMARY KEY, -- Was VARCHAR(13) PRIMARY KEY
    "BK_NAME" TEXT NOT NULL,          -- Was VARCHAR(40)
    "TOPIC_ID" INTEGER NOT NULL,      -- Was TINYINT UNSIGNED
    FOREIGN KEY ("TOPIC_ID") REFERENCES "CGY_TOPIC"("TOPIC_ID")
);
INSERT INTO CGY_BOOK VALUES('ISBN123456789','The Silent Patient',1);
INSERT INTO CGY_BOOK VALUES('ISBN234567890','Atomic Habits',4);
INSERT INTO CGY_BOOK VALUES('ISBN345678901','Sapiens',3);
INSERT INTO CGY_BOOK VALUES('ISBN456789012','The Art of War',7);
INSERT INTO CGY_BOOK VALUES('ISBN567890123','Clean Code',5);
INSERT INTO CGY_BOOK VALUES('ISBN678901234','The Innovators',2);
INSERT INTO CGY_BOOK VALUES('ISBN789012345','Becoming',4);
INSERT INTO CGY_BOOK VALUES('ISBN890123456','The Da Vinci Code',1);
INSERT INTO CGY_BOOK VALUES('ISBN901234567','Thinking Fast and Slow',7);
INSERT INTO CGY_BOOK VALUES('ISBN012345678','The Lean Startup',10);
INSERT INTO CGY_BOOK VALUES('ISBN112233445','Educated',4);
INSERT INTO CGY_BOOK VALUES('ISBN223344556','The Martian',2);
INSERT INTO CGY_BOOK VALUES('ISBN334455667','The Great Gatsby',9);
INSERT INTO CGY_BOOK VALUES('ISBN445566778','To Kill a Mockingbird',9);
INSERT INTO CGY_BOOK VALUES('ISBN556677889','1984',1);
INSERT INTO CGY_BOOK VALUES('ISBN667788990','The Hobbit',1);
INSERT INTO CGY_BOOK VALUES('ISBN778899001','The Lord of the Rings',1);
INSERT INTO CGY_BOOK VALUES('ISBN889900112','Pride and Prejudice',9);
INSERT INTO CGY_BOOK VALUES('ISBN990011223','The Catcher in the Rye',9);
INSERT INTO CGY_BOOK VALUES('ISBN001122334','Brave New World',1);
INSERT INTO CGY_BOOK VALUES('ISBN152233446','The Alchemist',1);
INSERT INTO CGY_BOOK VALUES('ISBN223344557','The Book Thief',9);
INSERT INTO CGY_BOOK VALUES('ISBN334455668','The Kite Runner',9);
INSERT INTO CGY_BOOK VALUES('ISBN445566779','The Road',1);
INSERT INTO CGY_BOOK VALUES('ISBN556677890','Life of Pi',1);
CREATE TABLE IF NOT EXISTS "CGY_BOOK_INV" (
    "BOOK_ID" INTEGER NOT NULL PRIMARY KEY, -- Was BIGINT UNSIGNED PRIMARY KEY
    "BK_STATUS" TEXT NOT NULL,      -- Was VARCHAR(1)
    "ISBN" TEXT,                    -- Was VARCHAR(13)
    FOREIGN KEY ("ISBN") REFERENCES "CGY_BOOK"("ISBN"),
    CONSTRAINT "CHK_BOOK_STATUS" CHECK ("BK_STATUS" IN ('A', 'N'))
);
INSERT INTO CGY_BOOK_INV VALUES(1,'N','ISBN123456789');
INSERT INTO CGY_BOOK_INV VALUES(2,'A','ISBN123456789');
INSERT INTO CGY_BOOK_INV VALUES(3,'N','ISBN234567890');
INSERT INTO CGY_BOOK_INV VALUES(4,'A','ISBN234567890');
INSERT INTO CGY_BOOK_INV VALUES(5,'N','ISBN345678901');
INSERT INTO CGY_BOOK_INV VALUES(6,'A','ISBN345678901');
INSERT INTO CGY_BOOK_INV VALUES(7,'N','ISBN456789012');
INSERT INTO CGY_BOOK_INV VALUES(8,'A','ISBN456789012');
INSERT INTO CGY_BOOK_INV VALUES(9,'N','ISBN567890123');
INSERT INTO CGY_BOOK_INV VALUES(10,'A','ISBN567890123');
INSERT INTO CGY_BOOK_INV VALUES(11,'N','ISBN678901234');
INSERT INTO CGY_BOOK_INV VALUES(12,'A','ISBN678901234');
INSERT INTO CGY_BOOK_INV VALUES(13,'N','ISBN789012345');
INSERT INTO CGY_BOOK_INV VALUES(14,'A','ISBN789012345');
INSERT INTO CGY_BOOK_INV VALUES(15,'N','ISBN890123456');
INSERT INTO CGY_BOOK_INV VALUES(16,'A','ISBN890123456');
INSERT INTO CGY_BOOK_INV VALUES(17,'N','ISBN901234567');
INSERT INTO CGY_BOOK_INV VALUES(18,'A','ISBN901234567');
INSERT INTO CGY_BOOK_INV VALUES(19,'N','ISBN012345678');
INSERT INTO CGY_BOOK_INV VALUES(20,'A','ISBN012345678');
INSERT INTO CGY_BOOK_INV VALUES(21,'N','ISBN112233445');
INSERT INTO CGY_BOOK_INV VALUES(22,'A','ISBN112233445');
INSERT INTO CGY_BOOK_INV VALUES(23,'N','ISBN223344556');
INSERT INTO CGY_BOOK_INV VALUES(24,'A','ISBN223344556');
INSERT INTO CGY_BOOK_INV VALUES(25,'N','ISBN334455667');
INSERT INTO CGY_BOOK_INV VALUES(26,'A','ISBN334455667');
INSERT INTO CGY_BOOK_INV VALUES(27,'N','ISBN445566778');
INSERT INTO CGY_BOOK_INV VALUES(28,'A','ISBN445566778');
INSERT INTO CGY_BOOK_INV VALUES(29,'N','ISBN556677889');
INSERT INTO CGY_BOOK_INV VALUES(30,'A','ISBN556677889');
INSERT INTO CGY_BOOK_INV VALUES(31,'N','ISBN667788990');
INSERT INTO CGY_BOOK_INV VALUES(32,'N','ISBN778899001');
INSERT INTO CGY_BOOK_INV VALUES(33,'N','ISBN889900112');
INSERT INTO CGY_BOOK_INV VALUES(34,'N','ISBN990011223');
INSERT INTO CGY_BOOK_INV VALUES(35,'N','ISBN001122334');
INSERT INTO CGY_BOOK_INV VALUES(36,'N','ISBN152233446');
INSERT INTO CGY_BOOK_INV VALUES(37,'N','ISBN223344557');
INSERT INTO CGY_BOOK_INV VALUES(38,'N','ISBN334455668');
INSERT INTO CGY_BOOK_INV VALUES(39,'N','ISBN445566779');
INSERT INTO CGY_BOOK_INV VALUES(40,'N','ISBN556677890');
CREATE TABLE IF NOT EXISTS "CGY_CUS_EXH" (
    "EVENT_ID" INTEGER NOT NULL,    -- Was INT UNSIGNED
    "CUSTOMER_ID" INTEGER NOT NULL, -- Was INT UNSIGNED
    "REG_ID" INTEGER NOT NULL,      -- Was BIGINT UNSIGNED
    PRIMARY KEY ("EVENT_ID", "CUSTOMER_ID"),
    FOREIGN KEY ("CUSTOMER_ID") REFERENCES "CGY_CUSTOMER"("CUSTOMER_ID"),
    FOREIGN KEY ("EVENT_ID") REFERENCES "EXHIBITION"("EVENT_ID")
);
INSERT INTO CGY_CUS_EXH VALUES(16,1,1);
INSERT INTO CGY_CUS_EXH VALUES(16,2,2);
INSERT INTO CGY_CUS_EXH VALUES(16,3,3);
INSERT INTO CGY_CUS_EXH VALUES(17,4,4);
INSERT INTO CGY_CUS_EXH VALUES(17,5,5);
INSERT INTO CGY_CUS_EXH VALUES(17,6,6);
INSERT INTO CGY_CUS_EXH VALUES(18,7,7);
INSERT INTO CGY_CUS_EXH VALUES(18,8,8);
INSERT INTO CGY_CUS_EXH VALUES(18,9,9);
INSERT INTO CGY_CUS_EXH VALUES(19,10,10);
INSERT INTO CGY_CUS_EXH VALUES(19,11,11);
INSERT INTO CGY_CUS_EXH VALUES(19,12,12);
INSERT INTO CGY_CUS_EXH VALUES(20,13,13);
INSERT INTO CGY_CUS_EXH VALUES(20,14,14);
INSERT INTO CGY_CUS_EXH VALUES(20,15,15);
INSERT INTO CGY_CUS_EXH VALUES(21,16,16);
INSERT INTO CGY_CUS_EXH VALUES(21,17,17);
INSERT INTO CGY_CUS_EXH VALUES(21,18,18);
CREATE TABLE IF NOT EXISTS "CGY_CUSTOMER" (
    "CUSTOMER_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "C_FNAME" TEXT NOT NULL,        -- Was VARCHAR(15)
    "C_LNAME" TEXT NOT NULL,        -- Was VARCHAR(15)
    "PHONE_NBR" TEXT NOT NULL,      -- Was VARCHAR(10)
    "EMAIL_ADDR" TEXT NOT NULL,     -- Was VARCHAR(40)
    "ID_TYPE" TEXT NOT NULL,        -- Was VARCHAR(1)
    "ID_NBR" TEXT NOT NULL,         -- Was VARCHAR(20)
    CONSTRAINT "CHK_ID_TYPE" CHECK ("ID_TYPE" IN ('P', 'S', 'D'))
);
INSERT INTO CGY_CUSTOMER VALUES(1,'Alice','Johnson','5551234567','alice.j@email.com','D','DL12345678');
INSERT INTO CGY_CUSTOMER VALUES(2,'Bob','Smith','5552345678','bob.smith@email.com','P','P12345678');
INSERT INTO CGY_CUSTOMER VALUES(3,'Carol','Williams','5553456789','carol.w@email.com','S','SSN123456789');
INSERT INTO CGY_CUSTOMER VALUES(4,'Dave','Brown','5554567890','dave.b@email.com','D','DL23456789');
INSERT INTO CGY_CUSTOMER VALUES(5,'Eve','Jones','5555678901','eve.j@email.com','P','P23456789');
INSERT INTO CGY_CUSTOMER VALUES(6,'Frank','Garcia','5556789012','frank.g@email.com','S','SSN234567890');
INSERT INTO CGY_CUSTOMER VALUES(7,'Grace','Miller','5557890123','grace.m@email.com','D','DL34567890');
INSERT INTO CGY_CUSTOMER VALUES(8,'Henry','Davis','5558901234','henry.d@email.com','P','P34567890');
INSERT INTO CGY_CUSTOMER VALUES(9,'Ivy','Rodriguez','5559012345','ivy.r@email.com','S','SSN345678901');
INSERT INTO CGY_CUSTOMER VALUES(10,'Jack','Martinez','5550123456','jack.m@email.com','D','DL45678901');
INSERT INTO CGY_CUSTOMER VALUES(11,'Karen','Hernandez','5551122334','karen.h@email.com','P','P45678901');
INSERT INTO CGY_CUSTOMER VALUES(12,'Leo','Lopez','5552233445','leo.l@email.com','S','SSN456789012');
INSERT INTO CGY_CUSTOMER VALUES(13,'Mia','Gonzalez','5553344556','mia.g@email.com','D','DL56789012');
INSERT INTO CGY_CUSTOMER VALUES(14,'Noah','Wilson','5554455667','noah.w@email.com','P','P56789012');
INSERT INTO CGY_CUSTOMER VALUES(15,'Olivia','Anderson','5555566778','olivia.a@email.com','S','SSN567890123');
INSERT INTO CGY_CUSTOMER VALUES(16,'Peter','Thomas','5556677889','peter.t@email.com','D','DL67890123');
INSERT INTO CGY_CUSTOMER VALUES(17,'Quinn','Taylor','5557788990','quinn.t@email.com','P','P67890123');
INSERT INTO CGY_CUSTOMER VALUES(18,'Rachel','Moore','5558899001','rachel.m@email.com','S','SSN678901234');
INSERT INTO CGY_CUSTOMER VALUES(19,'Steve','Jackson','5559900112','steve.j@email.com','D','DL78901234');
INSERT INTO CGY_CUSTOMER VALUES(20,'Tina','Martin','5550011223','tina.m@email.com','P','P78901234');
CREATE TABLE IF NOT EXISTS "CGY_INVOICE" (
    "INV_ID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, -- Was BIGINT UNSIGNED, Use AUTOINCREMENT for auto IDs
    "RENTAL_ID" INTEGER NOT NULL,     -- Was BIGINT UNSIGNED
    "INVOICE_DATE" TEXT NOT NULL,     -- Was DATE, Store as ISO8601 string
    "INV_AMT" REAL NOT NULL           -- Was DECIMAL(8, 2), Use REAL, consider INTEGER for cents if precision critical
);
INSERT INTO CGY_INVOICE VALUES(1,1,'2025-03-26',12.5);
INSERT INTO CGY_INVOICE VALUES(2,2,'2025-03-27',8.75);
INSERT INTO CGY_INVOICE VALUES(3,3,'2025-03-28',15.0);
INSERT INTO CGY_INVOICE VALUES(4,4,'2025-03-29',10.25);
INSERT INTO CGY_INVOICE VALUES(5,5,'2025-03-30',18.5);
INSERT INTO CGY_INVOICE VALUES(6,6,'2025-03-31',7.799999999999999823);
INSERT INTO CGY_INVOICE VALUES(7,7,'2025-04-01',22.39999999999999857);
INSERT INTO CGY_INVOICE VALUES(8,8,'2025-04-02',9.90000000000000035);
INSERT INTO CGY_INVOICE VALUES(9,9,'2025-04-03',14.75);
INSERT INTO CGY_INVOICE VALUES(10,10,'2025-04-04',11.30000000000000072);
INSERT INTO CGY_INVOICE VALUES(11,11,'2025-04-05',16.80000000000000071);
INSERT INTO CGY_INVOICE VALUES(12,12,'2025-04-06',13.25);
INSERT INTO CGY_INVOICE VALUES(13,13,'2025-04-07',19.5);
INSERT INTO CGY_INVOICE VALUES(14,14,'2025-04-08',8.199999999999999289);
INSERT INTO CGY_INVOICE VALUES(15,15,'2025-04-09',21.75);
CREATE TABLE IF NOT EXISTS "CGY_PAYMENT" (
    "PMT_ID" INTEGER NOT NULL PRIMARY KEY, -- Was BIGINT UNSIGNED PRIMARY KEY
    "PMT_METHOD" TEXT NOT NULL,     -- Was VARCHAR(6)
    "PMT_DATE" TEXT NOT NULL,       -- Was DATE, Store as ISO8601 string
    "PAYEE_FNAME" TEXT NOT NULL,    -- Was VARCHAR(15)
    "PAYEE_LNAME" TEXT NOT NULL,    -- Was VARCHAR(15)
    "PMT_AMT" REAL NOT NULL,        -- Was DECIMAL(5, 2), Use REAL
    "INV_ID" INTEGER,               -- Was BIGINT UNSIGNED
    FOREIGN KEY ("INV_ID") REFERENCES "CGY_INVOICE"("INV_ID"),
    CONSTRAINT "CHK_PMT_METHOD" CHECK ("PMT_METHOD" IN ('CASH', 'CREDIT', 'DEBIT', 'CHECK', 'ONLINE'))
);
INSERT INTO CGY_PAYMENT VALUES(1,'CREDIT','2025-03-23','Alice','Johnson',12.5,1);
INSERT INTO CGY_PAYMENT VALUES(2,'DEBIT','2025-03-24','Bob','Smith',8.75,2);
INSERT INTO CGY_PAYMENT VALUES(3,'CASH','2025-03-25','Carol','Williams',15.0,3);
INSERT INTO CGY_PAYMENT VALUES(4,'CREDIT','2025-03-26','Dave','Brown',10.25,4);
INSERT INTO CGY_PAYMENT VALUES(5,'ONLINE','2025-03-27','Eve','Jones',18.5,5);
INSERT INTO CGY_PAYMENT VALUES(6,'DEBIT','2025-03-28','Frank','Garcia',7.799999999999999823,6);
INSERT INTO CGY_PAYMENT VALUES(7,'CREDIT','2025-03-29','Grace','Miller',22.39999999999999857,7);
INSERT INTO CGY_PAYMENT VALUES(8,'CASH','2025-03-30','Henry','Davis',9.90000000000000035,8);
INSERT INTO CGY_PAYMENT VALUES(9,'ONLINE','2025-03-31','Ivy','Rodriguez',14.75,9);
INSERT INTO CGY_PAYMENT VALUES(10,'DEBIT','2025-04-01','Jack','Martinez',11.30000000000000072,10);
INSERT INTO CGY_PAYMENT VALUES(11,'CREDIT','2025-04-02','Karen','Hernandez',16.80000000000000071,11);
INSERT INTO CGY_PAYMENT VALUES(12,'ONLINE','2025-04-03','Leo','Lopez',13.25,12);
INSERT INTO CGY_PAYMENT VALUES(13,'CASH','2025-04-04','Mia','Gonzalez',19.5,13);
INSERT INTO CGY_PAYMENT VALUES(14,'DEBIT','2025-04-05','Noah','Wilson',8.199999999999999289,14);
INSERT INTO CGY_PAYMENT VALUES(15,'CREDIT','2025-04-06','Olivia','Anderson',21.75,15);
CREATE TABLE IF NOT EXISTS "CGY_RENTAL" (
    "RENTAL_ID" INTEGER NOT NULL PRIMARY KEY, -- Was BIGINT UNSIGNED PRIMARY KEY
    "R_STATUS" TEXT NOT NULL,       -- Was VARCHAR(8)
    "BORROW_DATE" TEXT NOT NULL,    -- Was DATE, Store as ISO8601 string
    "EXP_RT_DATE" TEXT NOT NULL,    -- Was DATE, Store as ISO8601 string
    "ACT_RT_DATE" TEXT,             -- Was DATE, Store as ISO8601 string
    "BOOK_ID" INTEGER,              -- Was BIGINT UNSIGNED
    "CUSTOMER_ID" INTEGER NOT NULL, -- Was INT UNSIGNED
    "INV_ID" INTEGER NULL,          -- Was BIGINT UNSIGNED NULL
    FOREIGN KEY ("BOOK_ID") REFERENCES "CGY_BOOK_INV"("BOOK_ID"),
    FOREIGN KEY ("CUSTOMER_ID") REFERENCES "CGY_CUSTOMER"("CUSTOMER_ID"),
    FOREIGN KEY ("INV_ID") REFERENCES "CGY_INVOICE"("INV_ID"),
    CONSTRAINT "CHK_RENTAL_STATUS" CHECK ("R_STATUS" IN ('BORROWED', 'RETURNED', 'LATE'))
);
INSERT INTO CGY_RENTAL VALUES(1,'BORROWED','2025-03-10','2025-03-24','2025-03-23',1,1,1);
INSERT INTO CGY_RENTAL VALUES(2,'BORROWED','2025-03-11','2025-03-25','2025-03-24',3,2,2);
INSERT INTO CGY_RENTAL VALUES(3,'BORROWED','2025-03-12','2025-03-26','2025-03-25',5,3,3);
INSERT INTO CGY_RENTAL VALUES(4,'BORROWED','2025-03-13','2025-03-27','2025-03-26',7,4,4);
INSERT INTO CGY_RENTAL VALUES(5,'BORROWED','2025-03-14','2025-03-28','2025-03-27',9,5,5);
INSERT INTO CGY_RENTAL VALUES(6,'BORROWED','2025-03-15','2025-03-29','2025-03-28',11,6,6);
INSERT INTO CGY_RENTAL VALUES(7,'BORROWED','2025-03-16','2025-03-30','2025-03-29',13,7,7);
INSERT INTO CGY_RENTAL VALUES(8,'BORROWED','2025-03-17','2025-03-31','2025-03-30',15,8,8);
INSERT INTO CGY_RENTAL VALUES(9,'BORROWED','2025-03-18','2025-04-01','2025-03-31',17,9,9);
INSERT INTO CGY_RENTAL VALUES(10,'BORROWED','2025-03-19','2025-04-02','2025-04-01',19,10,10);
INSERT INTO CGY_RENTAL VALUES(11,'BORROWED','2025-03-20','2025-04-03','2025-04-02',21,11,11);
INSERT INTO CGY_RENTAL VALUES(12,'BORROWED','2025-03-21','2025-04-04','2025-04-03',23,12,12);
INSERT INTO CGY_RENTAL VALUES(13,'BORROWED','2025-03-22','2025-04-05','2025-04-04',25,13,13);
INSERT INTO CGY_RENTAL VALUES(14,'BORROWED','2025-03-23','2025-04-06','2025-04-05',27,14,14);
INSERT INTO CGY_RENTAL VALUES(15,'BORROWED','2025-03-24','2025-04-07','2025-04-06',29,15,15);
INSERT INTO CGY_RENTAL VALUES(16,'BORROWED','2025-03-25','2025-04-08',NULL,31,16,NULL);
INSERT INTO CGY_RENTAL VALUES(17,'BORROWED','2025-03-26','2025-04-09',NULL,32,17,NULL);
INSERT INTO CGY_RENTAL VALUES(18,'BORROWED','2025-03-27','2025-04-10',NULL,33,18,NULL);
INSERT INTO CGY_RENTAL VALUES(19,'BORROWED','2025-03-28','2025-04-11',NULL,34,19,NULL);
INSERT INTO CGY_RENTAL VALUES(20,'BORROWED','2025-03-29','2025-04-12',NULL,35,20,NULL);
INSERT INTO CGY_RENTAL VALUES(21,'BORROWED','2025-03-05','2025-03-19',NULL,36,1,NULL);
INSERT INTO CGY_RENTAL VALUES(22,'BORROWED','2025-03-06','2025-03-20',NULL,37,2,NULL);
INSERT INTO CGY_RENTAL VALUES(23,'BORROWED','2025-03-07','2025-03-21',NULL,38,3,NULL);
INSERT INTO CGY_RENTAL VALUES(24,'BORROWED','2025-03-08','2025-03-22',NULL,39,4,NULL);
INSERT INTO CGY_RENTAL VALUES(25,'BORROWED','2025-03-09','2025-03-23',NULL,40,5,NULL);
CREATE TABLE IF NOT EXISTS "CGY_RM_RSV" (
    "RSV_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "RSV_START_DT" TEXT NOT NULL,   -- Was DATETIME, Store as ISO8601 string
    "RSV_END_DT" TEXT NOT NULL,     -- Was DATETIME, Store as ISO8601 string
    "GROUP_SIZE" INTEGER NOT NULL,  -- Was TINYINT UNSIGNED
    "TOPIC_DES" TEXT NOT NULL,      -- Was VARCHAR(30)
    "RM_ID" INTEGER NOT NULL,       -- Was SMALLINT UNSIGNED
    "CUSTOMER_ID" INTEGER,          -- Was INT UNSIGNED
    FOREIGN KEY ("CUSTOMER_ID") REFERENCES "CGY_CUSTOMER"("CUSTOMER_ID"),
    FOREIGN KEY ("RM_ID") REFERENCES "CGY_STUDYRM"("RM_ID")
);
INSERT INTO CGY_RM_RSV VALUES(1,'2025-03-23 10:00:00','2025-03-23 12:00:00',3,'Literature Review',1,1);
INSERT INTO CGY_RM_RSV VALUES(2,'2025-03-24 14:00:00','2025-03-24 16:00:00',5,'Science Project',2,2);
INSERT INTO CGY_RM_RSV VALUES(3,'2025-03-25 09:00:00','2025-03-25 11:00:00',4,'History Research',3,3);
INSERT INTO CGY_RM_RSV VALUES(4,'2025-03-26 13:00:00','2025-03-26 15:00:00',2,'Math Study',4,4);
INSERT INTO CGY_RM_RSV VALUES(5,'2025-03-27 10:00:00','2025-03-27 12:00:00',6,'Business Case',5,5);
INSERT INTO CGY_RM_RSV VALUES(6,'2025-03-28 14:00:00','2025-03-28 16:00:00',3,'Art Discussion',6,6);
INSERT INTO CGY_RM_RSV VALUES(7,'2025-03-29 09:00:00','2025-03-29 11:00:00',3,'Philosophy Debate',7,7);
INSERT INTO CGY_RM_RSV VALUES(8,'2025-03-30 13:00:00','2025-03-30 15:00:00',4,'Tech Project',8,8);
INSERT INTO CGY_RM_RSV VALUES(9,'2025-03-31 10:00:00','2025-03-31 12:00:00',2,'Book Club',9,9);
INSERT INTO CGY_RM_RSV VALUES(10,'2025-04-01 14:00:00','2025-04-01 16:00:00',6,'Study Group',10,10);
INSERT INTO CGY_RM_RSV VALUES(11,'2025-04-02 09:00:00','2025-04-02 11:00:00',3,'Research Meeting',11,11);
INSERT INTO CGY_RM_RSV VALUES(12,'2025-04-03 13:00:00','2025-04-03 15:00:00',5,'Thesis Work',12,12);
INSERT INTO CGY_RM_RSV VALUES(13,'2025-04-04 10:00:00','2025-04-04 12:00:00',4,'Group Study',13,13);
INSERT INTO CGY_RM_RSV VALUES(14,'2025-04-05 14:00:00','2025-04-05 16:00:00',2,'Project Planning',14,14);
INSERT INTO CGY_RM_RSV VALUES(15,'2025-04-06 09:00:00','2025-04-06 11:00:00',6,'Team Meeting',15,15);
INSERT INTO CGY_RM_RSV VALUES(16,'2025-04-27T17:21','2025-04-27T19:21',2,'project discussion',1,1);
INSERT INTO CGY_RM_RSV VALUES(17,'2025-05-17T08:00','2025-05-17T10:00',5,'Mock Interview',3,1);
INSERT INTO CGY_RM_RSV VALUES(18,'2025-05-29T08:59','2025-05-29T10:00',3,'history exam group study',1,3);
CREATE TABLE IF NOT EXISTS "CGY_SMR_SP" (
    "EVENT_ID" INTEGER NOT NULL,    -- Was INT UNSIGNED
    "SPONSOR_ID" INTEGER NOT NULL,  -- Was INT UNSIGNED
    "SPONSOR_AMT" REAL NOT NULL,    -- Was DECIMAL(6, 2), Use REAL
    PRIMARY KEY ("EVENT_ID", "SPONSOR_ID"),
    FOREIGN KEY ("SPONSOR_ID") REFERENCES "CGY_SPONSOR"("SPONSOR_ID"),
    FOREIGN KEY ("EVENT_ID") REFERENCES "SEMINAR"("EVENT_ID")
);
INSERT INTO CGY_SMR_SP VALUES(1,2,2000.0);
INSERT INTO CGY_SMR_SP VALUES(1,10,1500.0);
INSERT INTO CGY_SMR_SP VALUES(2,8,1000.0);
INSERT INTO CGY_SMR_SP VALUES(3,10,1200.0);
INSERT INTO CGY_SMR_SP VALUES(4,12,800.0);
INSERT INTO CGY_SMR_SP VALUES(5,14,500.0);
INSERT INTO CGY_SMR_SP VALUES(6,16,1800.0);
INSERT INTO CGY_SMR_SP VALUES(7,2,2500.0);
INSERT INTO CGY_SMR_SP VALUES(7,6,2000.0);
INSERT INTO CGY_SMR_SP VALUES(8,8,900.0);
INSERT INTO CGY_SMR_SP VALUES(9,10,1500.0);
INSERT INTO CGY_SMR_SP VALUES(9,20,1000.0);
INSERT INTO CGY_SMR_SP VALUES(10,2,1200.0);
INSERT INTO CGY_SMR_SP VALUES(11,8,800.0);
INSERT INTO CGY_SMR_SP VALUES(12,10,1500.0);
INSERT INTO CGY_SMR_SP VALUES(13,12,700.0);
INSERT INTO CGY_SMR_SP VALUES(14,14,600.0);
INSERT INTO CGY_SMR_SP VALUES(15,16,2000.0);
INSERT INTO CGY_SMR_SP VALUES(26,10,1500.0);
INSERT INTO CGY_SMR_SP VALUES(27,12,700.0);
INSERT INTO CGY_SMR_SP VALUES(28,14,600.0);
INSERT INTO CGY_SMR_SP VALUES(29,16,2000.0);
CREATE TABLE IF NOT EXISTS "CGY_SPONSOR" (
    "SPONSOR_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "SPONSOR_TYPE" TEXT NOT NULL,   -- Was VARCHAR(1)
    CONSTRAINT "CH_INH_CGY_SPONSOR" CHECK ("SPONSOR_TYPE" IN ('I', 'O'))
);
INSERT INTO CGY_SPONSOR VALUES(1,'I');
INSERT INTO CGY_SPONSOR VALUES(2,'O');
INSERT INTO CGY_SPONSOR VALUES(3,'I');
INSERT INTO CGY_SPONSOR VALUES(4,'O');
INSERT INTO CGY_SPONSOR VALUES(5,'I');
INSERT INTO CGY_SPONSOR VALUES(6,'O');
INSERT INTO CGY_SPONSOR VALUES(7,'I');
INSERT INTO CGY_SPONSOR VALUES(8,'O');
INSERT INTO CGY_SPONSOR VALUES(9,'I');
INSERT INTO CGY_SPONSOR VALUES(10,'O');
INSERT INTO CGY_SPONSOR VALUES(11,'I');
INSERT INTO CGY_SPONSOR VALUES(12,'O');
INSERT INTO CGY_SPONSOR VALUES(13,'I');
INSERT INTO CGY_SPONSOR VALUES(14,'O');
INSERT INTO CGY_SPONSOR VALUES(15,'I');
INSERT INTO CGY_SPONSOR VALUES(16,'O');
INSERT INTO CGY_SPONSOR VALUES(17,'I');
INSERT INTO CGY_SPONSOR VALUES(18,'O');
INSERT INTO CGY_SPONSOR VALUES(19,'I');
INSERT INTO CGY_SPONSOR VALUES(20,'O');
CREATE TABLE IF NOT EXISTS "CGY_STUDYRM" (
    "RM_ID" INTEGER NOT NULL PRIMARY KEY, -- Was SMALLINT UNSIGNED PRIMARY KEY
    "CAPACITY" INTEGER NOT NULL     -- Was TINYINT UNSIGNED
);
INSERT INTO CGY_STUDYRM VALUES(1,5);
INSERT INTO CGY_STUDYRM VALUES(2,6);
INSERT INTO CGY_STUDYRM VALUES(3,8);
INSERT INTO CGY_STUDYRM VALUES(4,4);
INSERT INTO CGY_STUDYRM VALUES(5,6);
INSERT INTO CGY_STUDYRM VALUES(6,8);
INSERT INTO CGY_STUDYRM VALUES(7,4);
INSERT INTO CGY_STUDYRM VALUES(8,6);
INSERT INTO CGY_STUDYRM VALUES(9,8);
INSERT INTO CGY_STUDYRM VALUES(10,10);
INSERT INTO CGY_STUDYRM VALUES(11,4);
INSERT INTO CGY_STUDYRM VALUES(12,6);
INSERT INTO CGY_STUDYRM VALUES(13,8);
INSERT INTO CGY_STUDYRM VALUES(14,4);
INSERT INTO CGY_STUDYRM VALUES(15,6);
INSERT INTO CGY_STUDYRM VALUES(16,5);
CREATE TABLE IF NOT EXISTS "CGY_TOPIC" (
    "TOPIC_ID" INTEGER NOT NULL PRIMARY KEY, -- Was TINYINT UNSIGNED PRIMARY KEY
    "TOPIC_DES" TEXT NOT NULL       -- Was VARCHAR(15)
);
INSERT INTO CGY_TOPIC VALUES(1,'Fiction');
INSERT INTO CGY_TOPIC VALUES(2,'Science');
INSERT INTO CGY_TOPIC VALUES(3,'History');
INSERT INTO CGY_TOPIC VALUES(4,'Biography');
INSERT INTO CGY_TOPIC VALUES(5,'Technology');
INSERT INTO CGY_TOPIC VALUES(6,'Art');
INSERT INTO CGY_TOPIC VALUES(7,'Philosophy');
INSERT INTO CGY_TOPIC VALUES(8,'Mathematics');
INSERT INTO CGY_TOPIC VALUES(9,'Literature');
INSERT INTO CGY_TOPIC VALUES(10,'Business');
CREATE TABLE IF NOT EXISTS "EXHIBITION" (
    "EVENT_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "EXPENSES" REAL NOT NULL,       -- Was DECIMAL(8, 2), Use REAL
    FOREIGN KEY ("EVENT_ID") REFERENCES "CGY_EVENTS"("EVENT_ID")
);
INSERT INTO EXHIBITION VALUES(16,5000.0);
INSERT INTO EXHIBITION VALUES(17,7500.0);
INSERT INTO EXHIBITION VALUES(18,6000.0);
INSERT INTO EXHIBITION VALUES(19,8500.0);
INSERT INTO EXHIBITION VALUES(20,7000.0);
INSERT INTO EXHIBITION VALUES(21,6500.0);
INSERT INTO EXHIBITION VALUES(22,5500.0);
INSERT INTO EXHIBITION VALUES(23,4500.0);
INSERT INTO EXHIBITION VALUES(24,8000.0);
INSERT INTO EXHIBITION VALUES(25,7200.0);
INSERT INTO EXHIBITION VALUES(30,4500.0);
INSERT INTO EXHIBITION VALUES(31,8000.0);
INSERT INTO EXHIBITION VALUES(32,7200.0);
INSERT INTO EXHIBITION VALUES(35,0.0);
CREATE TABLE IF NOT EXISTS "INDIVIDUAL" (
    "SPONSOR_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "S_FNAME" TEXT NOT NULL,        -- Was VARCHAR(15)
    "S_LNAME" TEXT NOT NULL,        -- Was VARCHAR(15)
    FOREIGN KEY ("SPONSOR_ID") REFERENCES "CGY_SPONSOR"("SPONSOR_ID")
);
INSERT INTO INDIVIDUAL VALUES(1,'William','Thompson');
INSERT INTO INDIVIDUAL VALUES(3,'Elizabeth','White');
INSERT INTO INDIVIDUAL VALUES(5,'Christopher','Harris');
INSERT INTO INDIVIDUAL VALUES(7,'Jessica','Clark');
INSERT INTO INDIVIDUAL VALUES(9,'Matthew','Lewis');
INSERT INTO INDIVIDUAL VALUES(11,'Amanda','Robinson');
INSERT INTO INDIVIDUAL VALUES(13,'Andrew','Walker');
INSERT INTO INDIVIDUAL VALUES(15,'Brittany','Hall');
INSERT INTO INDIVIDUAL VALUES(17,'Joshua','Allen');
INSERT INTO INDIVIDUAL VALUES(19,'Nicole','Young');
CREATE TABLE IF NOT EXISTS "ORG" (
    "SPONSOR_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "ORG_NAME" TEXT NOT NULL,       -- Was VARCHAR(30)
    FOREIGN KEY ("SPONSOR_ID") REFERENCES "CGY_SPONSOR"("SPONSOR_ID")
);
INSERT INTO ORG VALUES(2,'Tech Solutions Inc.');
INSERT INTO ORG VALUES(4,'Global Arts Foundation');
INSERT INTO ORG VALUES(6,'Science Research Corp');
INSERT INTO ORG VALUES(8,'Literary Society');
INSERT INTO ORG VALUES(10,'Business Innovators LLC');
INSERT INTO ORG VALUES(12,'Educational Partners');
INSERT INTO ORG VALUES(14,'Creative Minds Group');
INSERT INTO ORG VALUES(16,'Knowledge Foundation');
INSERT INTO ORG VALUES(18,'Future Thinkers');
INSERT INTO ORG VALUES(20,'Community Builders');
CREATE TABLE IF NOT EXISTS "SEMINAR" (
    "EVENT_ID" INTEGER NOT NULL PRIMARY KEY, -- Was INT UNSIGNED PRIMARY KEY
    "S_TYPE" TEXT NOT NULL,         -- Was VARCHAR(12)
    FOREIGN KEY ("EVENT_ID") REFERENCES "CGY_EVENTS"("EVENT_ID")
);
INSERT INTO SEMINAR VALUES(1,'WORKSHOP');
INSERT INTO SEMINAR VALUES(2,'LECTURE');
INSERT INTO SEMINAR VALUES(3,'DISCUSSION');
INSERT INTO SEMINAR VALUES(4,'LECTURE');
INSERT INTO SEMINAR VALUES(5,'DISCUSSION');
INSERT INTO SEMINAR VALUES(6,'WORKSHOP');
INSERT INTO SEMINAR VALUES(7,'WORKSHOP');
INSERT INTO SEMINAR VALUES(8,'LECTURE');
INSERT INTO SEMINAR VALUES(9,'DISCUSSION');
INSERT INTO SEMINAR VALUES(10,'WORKSHOP');
INSERT INTO SEMINAR VALUES(11,'LECTURE');
INSERT INTO SEMINAR VALUES(12,'DISCUSSION');
INSERT INTO SEMINAR VALUES(13,'LECTURE');
INSERT INTO SEMINAR VALUES(14,'DISCUSSION');
INSERT INTO SEMINAR VALUES(15,'WORKSHOP');
INSERT INTO SEMINAR VALUES(26,'WORKSHOP');
INSERT INTO SEMINAR VALUES(27,'LECTURE');
INSERT INTO SEMINAR VALUES(28,'DISCUSSION');
INSERT INTO SEMINAR VALUES(29,'LECTURE');
INSERT INTO SEMINAR VALUES(33,'General');
INSERT INTO SEMINAR VALUES(34,'General');
CREATE TABLE IF NOT EXISTS "customer" (
	"customer_id"	INTEGER NOT NULL,
	"full_name"	TEXT NOT NULL,
	"phone"	TEXT,
	"email"	TEXT NOT NULL UNIQUE,
	"id_type"	TEXT NOT NULL,
	"id_number"	TEXT NOT NULL UNIQUE,
	PRIMARY KEY("customer_id" AUTOINCREMENT),
	CHECK(id_type IN ('Passport','SSN','DriverLicense'))
);
INSERT INTO customer VALUES(1,'Yinshan Wang','9497288418','yw9023@nyu.edu','Passport','123123');
INSERT INTO customer VALUES(2,'mi','9497288418','ouyinshan@gmail.com','Passport','741');
INSERT INTO customer VALUES(3,'qweqwe',NULL,'q@w.com','Passport','231231');
INSERT INTO customer VALUES(4,'asd',NULL,'a@s.com','Passport','432432');
CREATE TABLE IF NOT EXISTS "employee" (
	"employee_id"	INTEGER,
	"full_name"	TEXT NOT NULL,
	"phone"	TEXT,
	"email"	TEXT NOT NULL UNIQUE,
	"department"	TEXT,
	PRIMARY KEY("employee_id" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "CGY_USER" (
	"user_id"	INTEGER,
	"username"	TEXT NOT NULL UNIQUE,
	"password_hash"	TEXT NOT NULL,
	"email"	TEXT NOT NULL UNIQUE,
	"role"	TEXT NOT NULL DEFAULT 'CUSTOMER',
	"customer_id"	INTEGER,
	"employee_id"	INTEGER,
	"created_at"	TEXT NOT NULL DEFAULT (datetime('now')),
	"last_login"	TEXT,
	"status"	TEXT NOT NULL DEFAULT 'ACTIVE',
	PRIMARY KEY("user_id" AUTOINCREMENT),
	FOREIGN KEY("customer_id") REFERENCES "customer"("customer_id"),
	FOREIGN KEY("employee_id") REFERENCES "employee"("employee_id"),
	CHECK("role" IN ('CUSTOMER', 'EMPLOYEE', 'ADMIN')),
	CHECK("status" IN ('ACTIVE', 'INACTIVE', 'LOCKED'))
);
INSERT INTO CGY_USER VALUES(1,'ouyinshan@gmail.com','$2b$10$CfoEuMV5tDsqNGqEQ/GN6OPfRROkkHorp44kiNkafruMuR5YRj2ci','yw9023@nyu.edu','CUSTOMER',1,NULL,'2025-05-13 01:16:30',NULL,'ACTIVE');
INSERT INTO CGY_USER VALUES(2,'misaka0502','$2b$10$Estnreqgs42Prn129tL69ekHjCACYVLHrMdMiFqNmiyip9T4kr5HS','ouyinshan@gmail.com','CUSTOMER',2,NULL,'2025-05-13 01:29:42','2025-05-13 01:30:16','ACTIVE');
INSERT INTO CGY_USER VALUES(3,'qwe','$2b$10$WjVonEKKhaw2x8s6r.eYhu4E19vqvAm06ovHIfs0VziEqli2yqSVi','q@w.com','CUSTOMER',3,NULL,'2025-05-13 01:31:54','2025-05-13 01:33:30','ACTIVE');
INSERT INTO CGY_USER VALUES(4,'asd','$2b$10$bw1lZzSBuBvX3NMZLIqmlu/rq8bdBiqj4pERLwVWH72VcmmKxzdIe','a@s.com','CUSTOMER',4,NULL,'2025-05-13 01:38:01','2025-05-13 02:01:53','ACTIVE');
CREATE TABLE IF NOT EXISTS "CGY_EVENTS" (
  "EVENT_ID" INTEGER PRIMARY KEY AUTOINCREMENT,
  "EVENT_NAME" TEXT NOT NULL,
  "EVENT_TYPE" TEXT NOT NULL,
  "START_DT" TEXT NOT NULL,
  "END_DT" TEXT NOT NULL,
  "TOPIC_ID" INTEGER,
  FOREIGN KEY ("TOPIC_ID") REFERENCES "CGY_TOPIC"("TOPIC_ID"),
  CONSTRAINT "CH_INH_CGY_EVENTS" CHECK ("EVENT_TYPE" IN ('E', 'S'))
);
INSERT INTO CGY_EVENTS VALUES(1,'Tech Conference 2023','S','2023-06-15T09:00','2023-06-17T17:00',5);
INSERT INTO CGY_EVENTS VALUES(2,'Literary Festival','S','2023-05-20T10:00','2023-05-22T16:00',9);
INSERT INTO CGY_EVENTS VALUES(3,'Business Seminar','S','2023-08-05T13:00','2023-08-05T17:00',10);
INSERT INTO CGY_EVENTS VALUES(4,'History Symposium','S','2023-09-12T10:00','2023-09-14T15:00',3);
INSERT INTO CGY_EVENTS VALUES(5,'Philosophy Discussion','S','2023-10-08T14:00','2023-10-08T17:00',7);
INSERT INTO CGY_EVENTS VALUES(6,'Mathematics Workshop','S','2023-11-15T09:00','2023-11-17T12:00',8);
INSERT INTO CGY_EVENTS VALUES(7,'Tech Innovation Summit','S','2024-02-10T09:00','2024-02-12T17:00',5);
INSERT INTO CGY_EVENTS VALUES(8,'Modern Literature Talk','S','2024-04-15T14:00','2024-04-15T17:00',9);
INSERT INTO CGY_EVENTS VALUES(9,'Entrepreneurship Forum','S','2024-06-08T10:00','2024-06-10T16:00',10);
INSERT INTO CGY_EVENTS VALUES(10,'AI Workshop','S','2023-07-10T09:00','2023-07-11T17:00',5);
INSERT INTO CGY_EVENTS VALUES(11,'Creative Writing Seminar','S','2023-12-05T10:00','2023-12-06T16:00',9);
INSERT INTO CGY_EVENTS VALUES(12,'Finance Masterclass','S','2024-01-15T09:00','2024-01-16T17:00',10);
INSERT INTO CGY_EVENTS VALUES(13,'Ancient History Lecture','S','2024-03-20T10:00','2024-03-21T15:00',3);
INSERT INTO CGY_EVENTS VALUES(14,'Ethics Symposium','S','2024-05-10T14:00','2024-05-11T17:00',7);
INSERT INTO CGY_EVENTS VALUES(15,'Data Science Workshop','S','2024-07-15T09:00','2024-07-17T12:00',8);
INSERT INTO CGY_EVENTS VALUES(16,'Art Exhibition Spring','E','2023-04-01T10:00','2023-04-30T18:00',6);
INSERT INTO CGY_EVENTS VALUES(17,'Science Fair','E','2023-07-10T09:00','2023-07-15T17:00',2);
INSERT INTO CGY_EVENTS VALUES(18,'Biography Exhibition','E','2023-12-01T10:00','2023-12-31T18:00',4);
INSERT INTO CGY_EVENTS VALUES(19,'Fiction Book Fair','E','2024-01-15T09:00','2024-01-30T19:00',1);
INSERT INTO CGY_EVENTS VALUES(20,'Art Through Ages','E','2024-03-05T10:00','2024-03-25T18:00',6);
INSERT INTO CGY_EVENTS VALUES(21,'Scientific Discoveries','E','2024-05-10T09:00','2024-05-20T17:00',2);
INSERT INTO CGY_EVENTS VALUES(22,'Photography Exhibit','E','2023-08-01T10:00','2023-08-21T18:00',6);
INSERT INTO CGY_EVENTS VALUES(23,'Children Books Expo','E','2023-10-15T09:00','2023-10-25T17:00',1);
INSERT INTO CGY_EVENTS VALUES(24,'Tech Innovations Show','E','2024-04-10T09:00','2024-04-20T17:00',5);
INSERT INTO CGY_EVENTS VALUES(25,'Historical Artifacts','E','2024-08-01T10:00','2024-08-31T18:00',3);
INSERT INTO CGY_EVENTS VALUES(26,'Finance Masterclass II','S','2025-12-15T09:00','2025-12-15T17:00',10);
INSERT INTO CGY_EVENTS VALUES(27,'World History Lecture','S','2026-03-20T10:00','2026-03-21T15:00',3);
INSERT INTO CGY_EVENTS VALUES(28,'Ethics Symposium II','S','2025-10-10T14:00','2025-10-11T17:00',7);
INSERT INTO CGY_EVENTS VALUES(29,'AI Workshop','S','2024-07-15T09:00','2024-07-17T12:00',8);
INSERT INTO CGY_EVENTS VALUES(30,'Children Books Expo II','E','2025-10-15T09:00','2025-10-25T17:00',1);
INSERT INTO CGY_EVENTS VALUES(31,'Tech Innovations Show','E','2026-04-10T09:00','2026-04-20T17:00',5);
INSERT INTO CGY_EVENTS VALUES(32,'Historical Artifacts','E','2025-08-01T10:00','2025-08-31T18:00',3);
INSERT INTO CGY_EVENTS VALUES(33,'Architecture and Energy Transition','S','2025-10-06T09:30','2025-10-06T11:30',2);
INSERT INTO CGY_EVENTS VALUES(34,'American Photography','E','2025-05-23T10:00','2025-05-23T18:00',6);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('CGY_INVOICE',15);
INSERT INTO sqlite_sequence VALUES('employee',0);
INSERT INTO sqlite_sequence VALUES('CGY_USER',4);
INSERT INTO sqlite_sequence VALUES('customer',4);
INSERT INTO sqlite_sequence VALUES('CGY_EVENTS',34);
CREATE UNIQUE INDEX "CGY_RENTAL__IDX" ON "CGY_RENTAL" ("INV_ID" ASC);
CREATE TRIGGER "ARC_FKArc_9_SEMINAR_INSERT"
BEFORE INSERT ON "SEMINAR"
FOR EACH ROW
WHEN (SELECT "EVENT_TYPE" FROM "CGY_EVENTS" WHERE "EVENT_ID" = NEW."EVENT_ID") <> 'S'
BEGIN
    SELECT RAISE(ABORT, 'FK SEMINAR_CGY_EVENTS_FK in Table SEMINAR violates Arc constraint on Table CGY_EVENTS - discriminator column EVENT_TYPE must be ''S''');
END;
CREATE TRIGGER "ARC_FKArc_9_SEMINAR_UPDATE"
BEFORE UPDATE ON "SEMINAR"
FOR EACH ROW
WHEN (SELECT "EVENT_TYPE" FROM "CGY_EVENTS" WHERE "EVENT_ID" = NEW."EVENT_ID") <> 'S'
BEGIN
    SELECT RAISE(ABORT, 'FK SEMINAR_CGY_EVENTS_FK in Table SEMINAR violates Arc constraint on Table CGY_EVENTS - discriminator column EVENT_TYPE must be ''S''');
END;
CREATE TRIGGER "ARC_FKArc_9_EXHIBITION_INSERT"
BEFORE INSERT ON "EXHIBITION"
FOR EACH ROW
WHEN (SELECT "EVENT_TYPE" FROM "CGY_EVENTS" WHERE "EVENT_ID" = NEW."EVENT_ID") <> 'E'
BEGIN
    SELECT RAISE(ABORT, 'FK EXHIBITION_CGY_EVENTS_FK in Table EXHIBITION violates Arc constraint on Table CGY_EVENTS - discriminator column EVENT_TYPE must be ''E''');
END;
CREATE TRIGGER "ARC_FKArc_9_EXHIBITION_UPDATE"
BEFORE UPDATE ON "EXHIBITION"
FOR EACH ROW
WHEN (SELECT "EVENT_TYPE" FROM "CGY_EVENTS" WHERE "EVENT_ID" = NEW."EVENT_ID") <> 'E'
BEGIN
    SELECT RAISE(ABORT, 'FK EXHIBITION_CGY_EVENTS_FK in Table EXHIBITION violates Arc constraint on Table CGY_EVENTS - discriminator column EVENT_TYPE must be ''E''');
END;
CREATE TRIGGER "ARC_FKArc_10_ORG_INSERT"
BEFORE INSERT ON "ORG"
FOR EACH ROW
WHEN (SELECT "SPONSOR_TYPE" FROM "CGY_SPONSOR" WHERE "SPONSOR_ID" = NEW."SPONSOR_ID") <> 'O'
BEGIN
    SELECT RAISE(ABORT, 'FK ORG_CGY_SPONSOR_FK in Table ORG violates Arc constraint on Table CGY_SPONSOR - discriminator column SPONSOR_TYPE must be ''O''');
END;
CREATE TRIGGER "ARC_FKArc_10_ORG_UPDATE"
BEFORE UPDATE ON "ORG"
FOR EACH ROW
WHEN (SELECT "SPONSOR_TYPE" FROM "CGY_SPONSOR" WHERE "SPONSOR_ID" = NEW."SPONSOR_ID") <> 'O'
BEGIN
    SELECT RAISE(ABORT, 'FK ORG_CGY_SPONSOR_FK in Table ORG violates Arc constraint on Table CGY_SPONSOR - discriminator column SPONSOR_TYPE must be ''O''');
END;
CREATE TRIGGER "ARC_FKArc_10_INDIVIDUAL_INSERT"
BEFORE INSERT ON "INDIVIDUAL"
FOR EACH ROW
WHEN (SELECT "SPONSOR_TYPE" FROM "CGY_SPONSOR" WHERE "SPONSOR_ID" = NEW."SPONSOR_ID") <> 'I'
BEGIN
    SELECT RAISE(ABORT, 'FK INDIVIDUAL_CGY_SPONSOR_FK in Table INDIVIDUAL violates Arc constraint on Table CGY_SPONSOR - discriminator column SPONSOR_TYPE must be ''I''');
END;
CREATE TRIGGER "ARC_FKArc_10_INDIVIDUAL_UPDATE"
BEFORE UPDATE ON "INDIVIDUAL"
FOR EACH ROW
WHEN (SELECT "SPONSOR_TYPE" FROM "CGY_SPONSOR" WHERE "SPONSOR_ID" = NEW."SPONSOR_ID") <> 'I'
BEGIN
    SELECT RAISE(ABORT, 'FK INDIVIDUAL_CGY_SPONSOR_FK in Table INDIVIDUAL violates Arc constraint on Table CGY_SPONSOR - discriminator column SPONSOR_TYPE must be ''I''');
END;
CREATE TRIGGER "TRG_CHECK_ROOM_CAPACITY_INSERT"
BEFORE INSERT ON "CGY_RM_RSV"
FOR EACH ROW
WHEN NEW."GROUP_SIZE" > (SELECT "CAPACITY" FROM "CGY_STUDYRM" WHERE "RM_ID" = NEW."RM_ID")
BEGIN
    SELECT RAISE(ABORT, 'Group size exceeds room capacity');
END;
CREATE TRIGGER "TRG_CHECK_ROOM_CAPACITY_UPDATE"
BEFORE UPDATE ON "CGY_RM_RSV"
FOR EACH ROW
WHEN NEW."GROUP_SIZE" > (SELECT "CAPACITY" FROM "CGY_STUDYRM" WHERE "RM_ID" = NEW."RM_ID")
BEGIN
    SELECT RAISE(ABORT, 'Group size exceeds room capacity');
END;
CREATE TRIGGER "TRG_GENERATE_INVOICE"
AFTER UPDATE ON "CGY_RENTAL"
FOR EACH ROW
-- Only fire when ACT_RT_DATE is newly set (was NULL, now has a value)
WHEN NEW."ACT_RT_DATE" IS NOT NULL AND OLD."ACT_RT_DATE" IS NULL
BEGIN
    -- Calculate invoice amount using SQLite date functions
    -- julianday returns days since noon in Greenwich on November 24, 4714 B.C.
    INSERT INTO "CGY_INVOICE" ("RENTAL_ID", "INVOICE_DATE", "INV_AMT")
    SELECT
        NEW."RENTAL_ID",
        date('now'), -- Use current date for invoice date
        CASE
            -- If returned on or before expected date
            WHEN julianday(NEW."ACT_RT_DATE") <= julianday(NEW."EXP_RT_DATE") THEN
                (julianday(NEW."ACT_RT_DATE") - julianday(NEW."BORROW_DATE")) * 0.2
            -- If returned after expected date
            ELSE
                ( (julianday(NEW."EXP_RT_DATE") - julianday(NEW."BORROW_DATE")) * 0.2 ) +
                ( (julianday(NEW."ACT_RT_DATE") - julianday(NEW."EXP_RT_DATE")) * 0.4 )
        END;

    -- Update the original rental record with the newly generated Invoice ID
    -- and set the status based on return date comparison
    UPDATE "CGY_RENTAL"
    SET
        "INV_ID" = last_insert_rowid(), -- Get the INV_ID just inserted
        "R_STATUS" = CASE
                        WHEN julianday(NEW."ACT_RT_DATE") > julianday(NEW."EXP_RT_DATE") THEN 'LATE'
                        ELSE 'RETURNED'
                     END
    WHERE "RENTAL_ID" = NEW."RENTAL_ID";

    -- Update book status to Available ('A')
    UPDATE "CGY_BOOK_INV"
    SET "BK_STATUS" = 'A'
    WHERE "BOOK_ID" = NEW."BOOK_ID";
END
;
CREATE TRIGGER "TRG_UPDATE_BOOK_STATUS"
AFTER INSERT ON "CGY_RENTAL"
FOR EACH ROW
BEGIN
    -- Set the R_STATUS for the new rental explicitly (can also be done via DEFAULT)
    -- Redundant if done in app, but ensures consistency via DB
    UPDATE "CGY_RENTAL" SET "R_STATUS" = 'BORROWED' WHERE "RENTAL_ID" = NEW."RENTAL_ID";

    -- Update book status to Not Available ('N')
    UPDATE "CGY_BOOK_INV"
    SET "BK_STATUS" = 'N'
    WHERE "BOOK_ID" = NEW."BOOK_ID";
END
;
CREATE TRIGGER "TRG_UPDATE_LATE_STATUS"
BEFORE UPDATE ON "CGY_RENTAL"
FOR EACH ROW
-- Only run if the book hasn't been returned yet AND the status isn't already LATE
WHEN NEW."ACT_RT_DATE" IS NULL AND NEW."R_STATUS" <> 'LATE'
BEGIN
    -- Update status to LATE if expected return date is in the past
    UPDATE "CGY_RENTAL"
    SET "R_STATUS" = 'LATE'
    WHERE "RENTAL_ID" = NEW."RENTAL_ID"
      AND date(NEW."EXP_RT_DATE") < date('now'); -- Check if due date has passed
END
;
COMMIT;
